{{-- Cache Management Tab - Tailwind Version --}}
<div class="space-y-6">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Cache Controls -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-6 flex items-center">
                <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4"></path>
                </svg>
                {{ __('Cache Controls') }}
            </h3>
            
            <div class="space-y-4 mb-6">
                <div class="bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900/50 dark:to-gray-900/30 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
                    <div class="flex justify-between items-center mb-3">
                        <span class="text-sm font-semibold text-gray-700 dark:text-gray-300">{{ __('Status') }}</span>
                        <span id="cache-enabled-badge" class="px-3 py-1.5 text-xs font-bold rounded-full bg-gray-200 text-gray-700 dark:bg-gray-700 dark:text-gray-300 shadow-sm">
                            {{ __('Loading...') }}
                        </span>
                    </div>
                    <button id="cache-toggle-btn" onclick="toggleCacheUi()" class="w-full px-4 py-2.5 rounded-lg text-sm font-semibold border-2 border-gray-300 bg-white dark:bg-gray-800 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 transition-all shadow-sm hover:shadow" disabled>
                        <span class="inline-flex items-center justify-center">
                            <span class="inline-block w-4 h-4 mr-2 animate-pulse">‚è≥</span>
                            {{ __('Loading...') }}
                        </span>
                    </button>
                </div>
                
                <div class="space-y-3">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            {{ __('Driver') }}
                        </label>
                        <select id="cache-driver-select" class="w-full form-select text-sm px-3 py-2 rounded-lg bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" disabled onchange="onChangeCacheConfig()">
                            <option>{{ __('Loading...') }}</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                            {{ __('TTL (seconds)') }}
                        </label>
                        <input id="cache-ttl-input" type="number" min="60" max="604800" step="60" class="w-full text-sm px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition" value="3600" onchange="onChangeCacheConfig()" disabled />
                        <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ __('Cache lifetime (60s - 604800s)') }}</p>
                    </div>
                    
                    <div class="flex items-center justify-between bg-gray-50 dark:bg-gray-900/50 rounded-lg p-3">
                        <span class="text-sm font-medium text-gray-700 dark:text-gray-300">{{ __('Debug Mode') }}</span>
                        <label class="inline-flex items-center cursor-pointer">
                            <input id="cache-debug-toggle" type="checkbox" class="form-checkbox h-5 w-5 text-blue-600 rounded border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500" onchange="onChangeCacheConfig()" disabled />
                            <span class="ml-2 text-sm text-gray-600 dark:text-gray-400">{{ __('Enable') }}</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="space-y-3">
                <button onclick="warmUpCache()" class="w-full px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white rounded-lg transition-all duration-200 text-sm font-semibold flex items-center justify-center shadow-md hover:shadow-lg">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z"></path>
                    </svg>
                    {{ __('Warm Up Cache') }}
                </button>
                <button onclick="clearAllCache()" class="w-full px-4 py-3 bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-white rounded-lg transition-all duration-200 text-sm font-semibold flex items-center justify-center shadow-md hover:shadow-lg">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    {{ __('Clear All Cache') }}
                </button>
                <div class="grid grid-cols-2 gap-3 pt-2">
                    <button onclick="toggleCache('enable')" class="px-4 py-3 bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white rounded-lg transition-all duration-200 text-sm font-semibold shadow-md hover:shadow-lg flex items-center justify-center">
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {{ __('Enable') }}
                    </button>
                    <button onclick="toggleCache('disable')" class="px-4 py-3 bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white rounded-lg transition-all duration-200 text-sm font-semibold shadow-md hover:shadow-lg flex items-center justify-center">
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                        {{ __('Disable') }}
                    </button>
                </div>
            </div>
        </div>

        <!-- Cache Statistics -->
        <div class="lg:col-span-2 bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                {{ __('Cache Statistics') }}
            </h3>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                <div class="text-center p-4 bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-900/30 rounded-lg border border-green-200 dark:border-green-800">
                    <div class="flex items-center justify-center mb-2">
                        <svg class="w-5 h-5 text-green-600 dark:text-green-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        <span class="text-xs font-medium text-green-700 dark:text-green-300">{{ __('Hits') }}</span>
                    </div>
                    <div id="cache-hits" class="text-3xl font-bold text-green-600 dark:text-green-400">0</div>
                </div>
                <div class="text-center p-4 bg-gradient-to-br from-yellow-50 to-yellow-100 dark:from-yellow-900/20 dark:to-yellow-900/30 rounded-lg border border-yellow-200 dark:border-yellow-800">
                    <div class="flex items-center justify-center mb-2">
                        <svg class="w-5 h-5 text-yellow-600 dark:text-yellow-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                        <span class="text-xs font-medium text-yellow-700 dark:text-yellow-300">{{ __('Misses') }}</span>
                    </div>
                    <div id="cache-misses" class="text-3xl font-bold text-yellow-600 dark:text-yellow-400">0</div>
                </div>
                <div class="text-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-800">
                    <div class="flex items-center justify-center mb-2">
                        <svg class="w-5 h-5 text-blue-600 dark:text-blue-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                        </svg>
                        <span class="text-xs font-medium text-blue-700 dark:text-blue-300">{{ __('Writes') }}</span>
                    </div>
                    <div id="cache-writes" class="text-3xl font-bold text-blue-600 dark:text-blue-400">0</div>
                </div>
                <div class="text-center p-4 bg-gradient-to-br from-red-50 to-red-100 dark:from-red-900/20 dark:to-red-900/30 rounded-lg border border-red-200 dark:border-red-800">
                    <div class="flex items-center justify-center mb-2">
                        <svg class="w-5 h-5 text-red-600 dark:text-red-400 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                        <span class="text-xs font-medium text-red-700 dark:text-red-300">{{ __('Deletes') }}</span>
                    </div>
                    <div id="cache-deletes" class="text-3xl font-bold text-red-600 dark:text-red-400">0</div>
                </div>
            </div>

            <div class="bg-gray-50 dark:bg-gray-900/50 rounded-lg p-4">
                <div class="flex justify-between items-center mb-3">
                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">{{ __('Cache Hit Rate') }}</span>
                    <span id="cache-hit-rate-text" class="text-lg font-bold text-gray-900 dark:text-white">0%</span>
                </div>
                <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-6 overflow-hidden shadow-inner">
                    <div id="cache-hit-rate-bar" class="h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-500 flex items-center justify-center text-xs font-medium text-white" style="width: 0%"></div>
                </div>
                <div class="flex items-start mt-3 text-xs text-gray-600 dark:text-gray-400">
                    <svg class="w-4 h-4 mr-1 flex-shrink-0 mt-0.5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span>{{ __('Higher is better. Target: >70% for optimal performance') }}</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Cache Chart -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-700">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
            <svg class="w-5 h-5 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z"></path>
            </svg>
            {{ __('Cache Hit/Miss Ratio') }}
        </h3>
        <div class="chart-container" style="height: 250px;">
            <canvas id="cacheChart"></canvas>
        </div>
    </div>
</div>

<script>
// Update cache status
window.updateCacheStatus = function(data) {
    const badge = document.getElementById('cache-enabled-badge');
    const btn = document.getElementById('cache-toggle-btn');
    
    if (data.enabled) {
        badge.className = 'px-3 py-1.5 text-xs font-bold rounded-full bg-gradient-to-r from-green-100 to-green-200 text-green-800 dark:from-green-900/70 dark:to-green-900/50 dark:text-green-200 border-2 border-green-400 dark:border-green-600 shadow-sm';
        badge.innerHTML = '<span class="inline-flex items-center"><span class="inline-block w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></span><span class="font-bold">ENABLED</span></span>';
        btn.innerHTML = '<span class="inline-flex items-center justify-center"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg><span class="font-semibold">{{ __("Disable Cache") }}</span></span>';
        btn.className = 'w-full px-4 py-2.5 rounded-lg text-sm font-semibold border-2 bg-gradient-to-r from-red-50 to-red-100 border-red-400 text-red-700 dark:from-red-900/30 dark:to-red-900/20 dark:text-red-200 dark:border-red-600 hover:from-red-100 hover:to-red-200 dark:hover:from-red-900/40 dark:hover:to-red-900/30 transition-all shadow-sm hover:shadow-md';
    } else {
        badge.className = 'px-3 py-1.5 text-xs font-bold rounded-full bg-gradient-to-r from-red-100 to-red-200 text-red-800 dark:from-red-900/70 dark:to-red-900/50 dark:text-red-200 border-2 border-red-400 dark:border-red-600 shadow-sm';
        badge.innerHTML = '<span class="inline-flex items-center"><span class="inline-block w-2 h-2 bg-red-500 rounded-full mr-2"></span><span class="font-bold">DISABLED</span></span>';
        btn.innerHTML = '<span class="inline-flex items-center justify-center"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg><span class="font-semibold">{{ __("Enable Cache") }}</span></span>';
        btn.className = 'w-full px-4 py-2.5 rounded-lg text-sm font-semibold border-2 bg-gradient-to-r from-green-50 to-green-100 border-green-400 text-green-700 dark:from-green-900/30 dark:to-green-900/20 dark:text-green-200 dark:border-green-600 hover:from-green-100 hover:to-green-200 dark:hover:from-green-900/40 dark:hover:to-green-900/30 transition-all shadow-sm hover:shadow-md';
    }
    btn.disabled = false;
    
    // Update dropdown
    const sel = document.getElementById('cache-driver-select');
    if (data.driver && sel.querySelector(`option[value="${data.driver}"]`)) {
        sel.value = data.driver;
    }
    sel.disabled = !data.enabled;
    
    // Update TTL/Debug
    document.getElementById('cache-ttl-input').disabled = !data.enabled;
    document.getElementById('cache-debug-toggle').disabled = !data.enabled;
};

// Update cache stats
window.updateCacheStats = function(data) {
    document.getElementById('cache-hits').textContent = (data.hits || 0).toLocaleString();
    document.getElementById('cache-misses').textContent = (data.misses || 0).toLocaleString();
    document.getElementById('cache-writes').textContent = (data.writes || 0).toLocaleString();
    document.getElementById('cache-deletes').textContent = (data.deletes || 0).toLocaleString();
    
    const hitRate = data.hit_rate || 0;
    document.getElementById('cache-hit-rate-text').textContent = hitRate + '%';
    document.getElementById('cache-hit-rate-bar').style.width = hitRate + '%';
    
    // Update bar color and content based on performance
    const bar = document.getElementById('cache-hit-rate-bar');
    if (hitRate >= 70) {
        bar.className = 'h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-500 flex items-center justify-center text-xs font-medium text-white';
        bar.innerHTML = hitRate > 10 ? '‚úì Excellent' : '';
    } else if (hitRate >= 50) {
        bar.className = 'h-full bg-gradient-to-r from-yellow-500 to-yellow-600 transition-all duration-500 flex items-center justify-center text-xs font-medium text-white';
        bar.innerHTML = hitRate > 10 ? '‚óã Good' : '';
    } else {
        bar.className = 'h-full bg-gradient-to-r from-red-500 to-red-600 transition-all duration-500 flex items-center justify-center text-xs font-medium text-white';
        bar.innerHTML = hitRate > 10 ? '‚úï Low' : '';
    }
    
    // Update chart
    updateCacheChart(data);
};

// Update cache metrics
window.updateCacheMetrics = function(data) {
    if (data) {
        const sel = document.getElementById('cache-driver-select');
        const currentValue = sel.value;
        
        // Populate dropdown jika available_drivers ada
        if (data.available_drivers && data.available_drivers.length > 0) {
            // Hanya update jika dropdown masih kosong atau cuma loading
            if (sel.options.length <= 1 || sel.options[0].textContent.includes('Loading')) {
                sel.innerHTML = '';
                data.available_drivers.forEach(drv => {
                    const opt = document.createElement('option');
                    opt.value = drv;
                    opt.textContent = drv.charAt(0).toUpperCase() + drv.slice(1);
                    sel.appendChild(opt);
                });
            }
        }
        
        // Set driver value
        if (data.driver) {
            sel.value = data.driver;
        } else if (currentValue && sel.querySelector(`option[value="${currentValue}"]`)) {
            sel.value = currentValue;
        }
        
        // Update TTL dan Debug
        if (typeof data.ttl !== 'undefined') {
            document.getElementById('cache-ttl-input').value = data.ttl;
        }
        if (typeof data.debug !== 'undefined') {
            document.getElementById('cache-debug-toggle').checked = !!data.debug;
        }
    }
};

// Update cache chart
function updateCacheChart(data) {
    const ctx = document.getElementById('cacheChart');
    if (!ctx) return;
    
    if (window.cacheChart) {
        window.cacheChart.destroy();
    }
    
    window.cacheChart = new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: ['{{ __("Hits") }}', '{{ __("Misses") }}'],
            datasets: [{
                data: [data.hits || 0, data.misses || 0],
                backgroundColor: ['rgb(34, 197, 94)', 'rgb(234, 179, 8)'],
                borderWidth: 0
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
}

// Toggle enable/disable from UI
window.toggleCacheUi = function() {
    const endpoint = action === 'enable' ? '/admin/cache/enable' : '/admin/cache/disable';
    const btn = event ? event.target.closest('button') : null;
    const originalHtml = btn ? btn.innerHTML : null;
    
    if (btn) {
        btn.disabled = true;
        btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>' + (action === 'enable' ? '{{ __("Enabling...") }}' : '{{ __("Disabling...") }}');\n    }
    
    fetch(endpoint, { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json',
            'Content-Type': 'application/json'\n        }\n    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', data.message);\n            // Reload data untuk refresh UI\n            setTimeout(() => loadCacheData(), 500);\n        } else {\n            showNotification('error', data.message || '{{ __("Failed to update cache") }}');\n        }\n        if (btn) {\n            btn.disabled = false;\n            if (originalHtml) btn.innerHTML = originalHtml;\n        }\n    })\n    .catch(err => {\n        console.error('Toggle cache error:', err);\n        showNotification('error', '{{ __("Network error") }}');\n        if (btn) {\n            btn.disabled = false;\n            if (originalHtml) btn.innerHTML = originalHtml;\n        }\n    });\n}

// Warm up cache
function warmUpCache() {
    const btn = event.target.closest('button');
    const originalHtml = btn.innerHTML;
    
    btn.disabled = true;
    btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>{{ __("Warming up...") }}';
    
    fetch('/admin/cache/warm-up', { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json'
        }
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', '{{ __("Cache warmed up successfully") }}');
            loadCacheData();
        } else {
            showNotification('error', data.message || '{{ __("Failed to warm up cache") }}');
        }
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    })
    .catch(err => {
        showNotification('error', '{{ __("Network error") }}');
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    });
}

// Clear all cache
function clearAllCache() {
    if (!confirm('{{ __("Are you sure you want to clear all cache?") }}')) {
        return;
    }
    
    const btn = event.target.closest('button');
    const originalHtml = btn.innerHTML;
    
    btn.disabled = true;
    btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>{{ __("Clearing...") }}';
    
    fetch('/admin/cache/clear-all', { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json'
        }
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', '{{ __("Cache cleared successfully") }}');
            loadCacheData();
        } else {
            showNotification('error', data.message || '{{ __("Failed to clear cache") }}');
        }
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    })
    .catch(err => {
        showNotification('error', '{{ __("Network error") }}');
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    });
}

// Toggle enable/disable from UI
window.toggleCacheUi = function() {
    const badgeText = document.getElementById('cache-enabled-badge').textContent.trim().toUpperCase();
    console.log('Badge text:', badgeText); // Debug
    
    if (badgeText.includes('ENABLED')) {
        // Cache is enabled, so disable it
        toggleCache('disable');
    } else {
        // Cache is disabled, so enable it
        toggleCache('enable');
    }
};

// On change dropdown/input -> AJAX update
window.onChangeCacheConfig = function() {
    const badgeText = document.getElementById('cache-enabled-badge').textContent.trim().toUpperCase();
    if (!badgeText.includes('ENABLED')) return; // Ignore if disabled
    
    const driver = document.getElementById('cache-driver-select').value;
    const ttl = parseInt(document.getElementById('cache-ttl-input').value) || 3600;
    const debug = document.getElementById('cache-debug-toggle').checked;
    
    fetch('/admin/cache/config', {
        method: 'POST',
        headers: { 
            'Content-Type': 'application/json', 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json'
        },
        body: JSON.stringify({driver, ttl, debug, enabled: true})
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', '{{ __("Cache config updated!") }}');
            // Reload data untuk update UI
            setTimeout(() => loadCacheData(), 500);
        } else {
            showNotification('error', data.message || '{{ __("Failed to update cache config") }}');
        }
    })
    .catch(err => {
        console.error('Config update error:', err);
        showNotification('error', '{{ __("Network error") }}');
    });
};

// Toggle cache function
window.toggleCache = function(action) {
    const endpoint = action === 'enable' ? '/admin/cache/enable' : '/admin/cache/disable';
    const btn = event ? event.target.closest('button') : null;
    const originalHtml = btn ? btn.innerHTML : null;
    
    if (btn) {
        btn.disabled = true;
        btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>' + (action === 'enable' ? '{{ __("Enabling...") }}' : '{{ __("Disabling...") }}');
    }
    
    fetch(endpoint, { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', data.message);
            // Reload data untuk refresh UI
            setTimeout(() => loadCacheData(), 500);
        } else {
            showNotification('error', data.message || '{{ __("Failed to update cache") }}');
        }
        if (btn) {
            btn.disabled = false;
            if (originalHtml) btn.innerHTML = originalHtml;
        }
    })
    .catch(err => {
        console.error('Toggle cache error:', err);
        showNotification('error', '{{ __("Network error") }}');
        if (btn) {
            btn.disabled = false;
            if (originalHtml) btn.innerHTML = originalHtml;
        }
    });
};

// Warm up cache
window.warmUpCache = function() {
    const btn = event.target.closest('button');
    const originalHtml = btn.innerHTML;
    
    btn.disabled = true;
    btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>{{ __("Warming up...") }}';
    
    fetch('/admin/cache/warm-up', { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json'
        }
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', '{{ __("Cache warmed up successfully") }}');
            loadCacheData();
        } else {
            showNotification('error', data.message || '{{ __("Failed to warm up cache") }}');
        }
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    })
    .catch(err => {
        showNotification('error', '{{ __("Network error") }}');
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    });
};

// Clear all cache
window.clearAllCache = function() {
    if (!confirm('{{ __("Are you sure you want to clear all cache?") }}')) {
        return;
    }
    
    const btn = event.target.closest('button');
    const originalHtml = btn.innerHTML;
    
    btn.disabled = true;
    btn.innerHTML = '<svg class="w-4 h-4 inline-block animate-spin mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>{{ __("Clearing...") }}';
    
    fetch('/admin/cache/clear-all', { 
        method: 'POST',
        headers: { 
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
            'Accept': 'application/json'
        }
    })
    .then(r => r.json())
    .then(data => {
        if (data.success) {
            showNotification('success', '{{ __("Cache cleared successfully") }}');
            loadCacheData();
        } else {
            showNotification('error', data.message || '{{ __("Failed to clear cache") }}');
        }
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    })
    .catch(err => {
        showNotification('error', '{{ __("Network error") }}');
        btn.disabled = false;
        btn.innerHTML = originalHtml;
    });
};

function loadConfig() {
    fetch('/admin/cache/config', { 
        method: 'GET', 
        headers: { 'Accept': 'application/json' } 
    })
    .then(r => r.json())
    .then(data => {
        if(data.success && data.data) {
            // Update metrics first (ini populate dropdown)
            window.updateCacheMetrics(data.data);
            // Then update status (ini set value dropdown)
            window.updateCacheStatus(data.data);
        } else {
            showNotification('error', data.message || '{{ __("Failed to load cache config") }}');
            setDriverDropdownError();
        }
    })
    .catch(err => {
        console.error('Load config error:', err);
        showNotification('error', '{{ __("Failed to load cache config") }}: ' + err);
        setDriverDropdownError();
    });
}
function setDriverDropdownError() {
    const sel = document.getElementById('cache-driver-select');
    sel.innerHTML = '';
    sel.appendChild(Object.assign(document.createElement('option'), { value: '', textContent: 'Error loading drivers' }));
    sel.disabled = true;
}
document.addEventListener('DOMContentLoaded', function() {
    loadConfig();
});
</script>

